'fileTypes': [
  'd'
]
'name': 'D'
'scopeName': 'source.d'
'patterns': [
  {
    'include': '#module'
  }
  {
    'include': '#code'
  }
]
'repository':
  'code':
    'patterns': [
      {
        'include': '#comments'
      }
      {
        'include': '#keywords'
      }
      {
        'include': '#classes'
      }
      {
        'include': '#functions'
      }
      {
        'include': '#constants-and-special-vars'
      }
      {
        'include': '#strings'
      }
      {
        'include': '#imports'
      }
      {
        'include': '#all-types'
      }
      {
        'include': '#attributes'
      }
      {
        'include': '#unittests'
      }
    ]
  'all-types':
    'patterns': [
      {
        'include': '#primitive-arrays'
      }
      {
        'include': '#primitive-types'
      }
      {
        'include': '#object-types'
      }
      {
        'include': '#type-qualifiers'
      }
    ]
  'attributes':
    'patterns': [
      {
        'match': '@\\w*(?:\\((?:\\s*\\w+\\s*,?)+\\)+)?'
        'name': 'storage.modifier.attribute.d'
      }
      {
        'match': '@disable\\b'
        'name': 'storage.modifier.disable.d'
      }
      {
        'match': '@nogc\\b'
        'name': 'storage.modifier.nogc.d'
      }
      {
        'match': '@property\\b'
        'name': 'storage.modifier.property.d'
      }
      {
        'match': '@(safe|trusted|system)\\b'
        'name': 'storage.modifier.safety.d'
      }
      {
        'match': '\\b(nothrow)\\b'
        'name': 'storage.modifier.nothrow.d'
      }
      {
        'match': '\\b(pure)\\b'
        'name': 'storage.modifier.pure.d'
      }
      {
        'match': '\\b(ref)\\b'
        'name': 'storage.modifier.ref.d'
      }
      {
        'match': '\\b(override)\\b'
        'name': 'storage.modifier.override.d'
      }
      {
        'match': '\\b(static)\\b'
        'name': 'storage.modifier.static.d'
      }
      {
        'match': '\\b(auto)\\b'
        'name': 'storage.modifier.auto.d'
      }
      {
        'match': '\\b(scope)\\b'
        'name': 'storage.modifier.scope.d'
      }
      {
        'match': '\\b(abstract)\\b'
        'name': 'storage.modifier.abstract.d'
      }
      {
        'begin': '\\b(extern)\\s*\\('
        'beginCaptures':
          '1':
            'name': 'keyword.other.extern.d'
        'end': '\\)'
        'name': 'storage.modifier.linkage.d'
      }
      {
        'match': '\\b(align)\\b'
        'name': 'storage.modifier.align.d'
      }
      {
        'match': '\\b(deprecated)\\b'
        'name': 'storage.modifier.deprecated.d'
      }
      {
        'match': '\\b(private|package|protected|public|export)\\b'
        'name': 'storage.modifier.protection.d'
      }
      {
        'match': '\\b(const|immutable|inout|shared|__gshared)\\b'
        'name': 'storage.modifier.qualifier.d'
      }
    ]
  'comments-nesting':
    'patterns': [
      {
        'begin': '/\\+'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.begin.d'
        'end': '\\+/'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.comment.end.d'
        'patterns': [
          {
            'include': '#comments-nesting'
          }
        ]
        'name': 'comment.block.d'
      }
    ]
  'comments':
    'patterns': [
      {
        'include': '#comments-nesting'
      }
      {
        'begin': '/\\*'
        'beginCaptures':
          '0': 'name': 'punctuation.definition.comment.begin.d'
        'end': '\\*/'
        'endCaptures':
          '0': 'name': 'punctuation.definition.comment.end.d'
        'name': 'comment.block.d'
      }
      {
        'begin': '//'
        'beginCaptures':
          '0': 'name': 'punctuation.definition.comment.d'
        'end': '\\n'
        'name': 'comment.line.double-slash.d'
      }
    ]
  'constants-and-special-vars':
    'patterns': [
      {
        'match': '\\b(true|false|null)\\b'
        'name': 'constant.language.d'
      }
      {
        'match': '\\b(this|super)\\b'
        'name': 'variable.language.d'
      }
      {
        'match': '\\b[A-Z][A-Z0-9_]+(?!\\.classinfo|\\s*\\w+\\s*=)\\b'
        'name': 'constant.other.d'
      }
      {
        'comment': 'decimal integers'
        'match': '\\b(?<!\\.)\\d[\\d_]*(?:[LuU]|L[uU]|[uU]L)?(?!\\.)\\b'
        'name': 'constant.numeric.integer.decimal.d'
      }
      {
        'comment': 'binary integers'
        'match': '\\b0[bB]_*[01][01_]*(?:[iLuU]|L[uU]|[uU]L)?\\b'
        'name': 'constant.numeric.integer.binary.d'
      }
      {
        'comment': 'hex integers'
        'match': '\\b0[xX](?![^\\.]*\\.)(?=_*\\h)[\\h_]+(?:[iLuU]|L[uU]|[uU]L)?\\b'
        'name': 'constant.numeric.integer.hex.d'
      }
      {
        'comment': 'decimal floats'
        'match': '(?<![\\.\\w])(?=[\\.\\d])(?=[_\\.]*\\d)\\d*\\.\\d*([eE][\\+-]?\\d+)?[ifFL]?\\b'
        'name': 'constant.numeric.float.decimal.d'
      }
      {
        'comment': 'hex floats'
        'match': '\\b0[xX](?=\\H*\\h)[\\h_]*(\\.[\\h_]*)?[pP][\\+-]?\\d+[ifFL]?\\b'
        'name': 'constant.numeric.float.hex.d'
      }
      {
        'match': "\\'.\\'"
        'name': 'constant.character.d'
      }
      {
        'match': "\\'\\\\.\\'"
        'name': 'constant.character.escape.d'
      }
    ]
  'functions':
    'patterns': [
      {
        'begin': '([\\w\\(\\)\\[\\]\\.,!]+)\\s+(\\w+)\\s*(?=\\([^\\)]*\\))(?!.*;)'
        'beginCaptures':
          '1':
            'name': 'storage.type.return.d'
          '2':
            'name': 'entity.name.function.d'
        'end': '}'
        'name': 'meta.function.d'
        'patterns': [
          {
            'begin': '(?<=\\w|\\))\\s*\\('
            'end': '\\)(?!\\()'
            'contentName': 'meta.function.parameters.d'
            'patterns': [
              {
                'include': '#attributes'
              }
              {
                'include': '#all-types'
              }
              {
                'match': '\\w+'
                'name': 'variable.parameter.d'
              }
            ]
          }
          {
            'begin': '(?<=\\))'
            'end': '(?=\\{|in|out|body)'
            'name': 'meta.function.attributes.d'
            'patterns': [
              {
                'include': '#attributes'
              }
            ]
          }
          {
            'begin': '\\b(in)\\b'
            'beginCaptures':
              '1':
                'name': 'keyword.control.contract.pre.d'
            'end': '}'
            'name': 'meta.function.contract.pre.d'
            'patterns': [
              {
                'include': '#code'
              }
            ]
          }
          {
            'begin': '\\b(out)(?:\\s*\\(\\s*(result)\\s*\\))?'
            'beginCaptures':
              '1':
                'name': 'keyword.control.contract.post.d'
              '2':
                'name': 'variable.parameter.result.d'
            'end': '}'
            'name': 'meta.function.contract.post.d'
            'patterns': [
              {
                'include': '#code'
              }
            ]
          }
          {
            'begin': '\\b(body)\\b'
            'beginCaptures':
              '1':
                'name': 'keyword.control.body.d'
            'end': '(?=})'
            'name': 'meta.function.body.d'
            'patterns': [
              {
                'include': '#code'
              }
            ]
          }
          {
            'begin': '{'
            'beginCaptures':
              '1':
                'name': 'keyword.control.body.d'
            'end': '(?=})'
            'name': 'meta.function.body.d'
            'patterns': [
              {
                'include': '#code'
              }
            ]
          }
        ]
      }
    ]
  'classes':
    'patterns': [
      {
        'begin': '\\b(class|struct|interface|template|union)\\s+(\\w+)\\s*'
        'beginCaptures':
          '1':
            'name': 'keyword.other.type.d'
          '2':
            'name': 'entity.name.class.d'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'punctuation.section.type.end.d'
        'name': 'meta.class.d'
        'patterns': [
          {
            'include': '#code'
          }
          {
            'include': '#invariants'
          }
        ]
      }
    ]
  'invariants':
    'patterns': [
      {
        'begin': '\\b(invariant)\\s*\\(\\s*\\)'
        'beginCaptures':
          '1':
            'name': 'keyword.other.invariant.d'
        'end': '}'
        'name': 'meta.class.invariant.d'
        'patterns': [
          {
            'include': '#code'
          }
        ]
      }
    ]
  'keywords':
    'patterns': [
      {
        'match': '\\b(if|else|else if|switch|return|case|default)\\b'
        'name': 'keyword.control.d'
      }
      {
        'match': '\\b(for(each(_reverse)?)?|do|while)\\b'
        'name': 'keyword.control.loop.d'
      }
      {
        'match': '\\b(goto|break|continue)\\b'
        'name': 'keyword.control.branch.d'
      }
      {
        'match': '\\b(try|catch|finally|throw|scope)\\b'
        'name': 'keyword.control.exception.d'
      }
      {
        'match': '\\b(deprecated|mixin|pragma|alias|cast|new|is|in)\\b'
        'name': 'keyword.other.d'
      }
      {
        'match': '\\b(assert)\\b'
        'name': 'keyword.other.assert.d'
      }
      {
        'match': '='
        'name': 'keyword.operator.assignment.d'
      }
      {
        'match': '[\\+\\-\\*/%]'
        'name': 'keyword.operator.arithmetic.d'
      }
      {
        'match': '[\\+\\-\\*/%]='
        'name': 'keyword.operator.assignment.arithmetic.d'
      }
      {
        'match': '<<|>>?|\\||\\^|&'
        'name': 'keyword.operator.bitwise.d'
      }
      {
        'match': '(<<|>>?|\\||\\^|&)='
        'name': 'keyword.operator.assignment.bitwise.d'
      }
      {
        'match': '(!|&&|\\|\\|)'
        'name': 'keyword.operator.boolean.d'
      }
      {
        'match': '(==|!=|<=|>=|<>|<|>)'
        'name': 'keyword.operator.comparison.d'
      }
      {
        'match': '[\\?:]'
        'name': 'keyword.control.ternary.d'
      }
      {
        'match': '(?<=\\w)\\.(?=\\w)'
        'name': 'keyword.operator.dereference.d'
      }
      {
        'match': '~'
        'name': 'keyword.operator.concatenation.d'
      }
      {
        'match': '~='
        'name': 'keyword.operator.assignment.concatenation.d'
      }
      {
        'match': ','
        'name': 'punctuation.comma.d'
      }
      {
        'match': ';'
        'name': 'punctuation.terminator.d'
      }
    ]
  'module':
    'patterns': [
      {
        'match': '\\b(module)\\s+(\\w+(?:\\.\\w+)*)\\b'
        'name': 'meta.module.d'
        'captures':
          '1':
            'name': 'keyword.other.module.d'
          '2':
            'name': 'entity.name.module.d'
      }
    ]
  'imports':
    'patterns': [
      {
        'begin': '\\b(?:(static)\\s+)?(import)\\s+'
        'beginCaptures':
          '1':
            'name': 'keyword.other.static.d'
          '2':
            'name': 'keyword.other.import.d'
        'end': '(;)'
        'endCaptures':
          '1':
            'name': 'punctuation.terminator.d'
        'name': 'meta.import.d'
        'patterns': [
          {
            'match': '\\w+(?:(\\.)\\w+)*'
            'name': 'support.other.import.d'
            'captures':
              '1':
                'name': 'punctuation.separator.d'
          }
          {
            'match': '(:)\\s*(\\w+)(?:(,)\\s*(\\w+)\\s*)*'
            'captures':
              '1':
                'name': 'punctuation.separator.d'
              '2':
                'name': 'entity.name.import.selective.d'
              '3':
                'name': 'punctuation.separator.d'
              '4':
                'name': 'entity.name.import.selective.d'
          }
        ]
      }
    ]
  'primitive-arrays':
    'patterns': [
      {
        'match': '\\b(?:void|bool|size_t|ptrdiff_t)(?:\\[\\w*\\])+'
        'name': 'storage.type.primitive.array.d'
      }
      {
        'match': '\\bu?(?:byte|short|int|long|cent)(?:\\[\\w*\\])+'
        'name': 'storage.type.primitive.array.d'
      }
      {
        'match': '\\b[ic]?(?:float|double|real)(?:\\[\\w*\\])+'
        'name': 'storage.type.primitive.array.d'
      }
      {
        'match': '\\b[wd]?string(?:\\[\\w*\\])*'
        'name': 'storage.type.primitive.array.d'
      }
    ]
  'primitive-types':
    'patterns': [
      {
        'match': '\\b(?:void|bool|size_t|ptrdiff_t)(?!\\[)\\b'
        'name': 'storage.type.primitive.d'
      }
      {
        'match': '\\bu?(?:byte|short|int|long|cent)(?!\\[)\\b'
        'name': 'storage.type.primitive.d'
      }
      {
        'match': '\\b[ic]?(?:float|double|real)(?!\\[)\\b'
        'name': 'storage.type.primitive.d'
      }
      {
        'match': '\\b[wd]?char(?!\\[)\\b'
        'name': 'storage.type.primitive.d'
      }
    ]
  'object-types':
    'patterns': [
      {
        'match': '\\b[A-Z]\\w*[a-z]\\w*(?!\\[)\\b'
        'name': 'storage.type.class.d'
      }
      {
        'begin': '\\b[A-Z]\\w*[a-z]\\w*(!)\\(?'
        'beginCaptures':
          '1':
            'name': 'keyword.operator.template.d'
        'end': '\\)?\\b'
        'name': 'storage.type.template.class.d'
        'patterns': [
          {
            'include': '#all-types'
          }
        ]
      }
      {
        'match': '\\b[A-Z]\\w*[a-z]\\w*(?:\\[\\w*\\])+'
        'name': 'storage.type.class.array.d'
      }
    ]
  'type-qualifiers':
    'patterns': [
      {
        'match': '\\b(const|immutable|inout|shared)(?!\\()\\b'
        'name': 'storage.modifier.qualifier.d'
      }
      {
        'begin': '\\b(const|immutable|inout|shared)\\('
        'beginCaptures':
          '1':
            'name': 'storage.modifier.qualifier.d'
        'end': '\\)'
        'name': 'storage.type.qualifier.d'
        'patterns': [
          {
            'include': '#all-types'
          }
        ]
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.d'
        'end': '(")([cwd])?'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.string.end.d'
          '2':
            'name': 'punctuation.definition.string.postfix.d'
        'name': 'string.quoted.double.d'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.d'
          }
        ]
      }
      {
        'begin': 'r"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.d'
        'end': '"([cwd])?'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.string.end.d'
          '2':
            'name': 'punctuation.definition.string.postfix.d'
        'name': 'string.regex.d'
        'patterns': [
          {
            'include': 'source.js.regexp'
          }
        ]
      }
    ]
  'unittests':
    'patterns': [
      {
        'begin': '\\b(unittest)\\b'
        'beginCaptures':
          '1':
            'name': 'keyword.other.unittest.d'
        'end': '}'
        'name': 'meta.unittest.d'
        'patterns': [
          {
            'include': '#code'
          }
        ]
      }
      {
        'match': '\\b(assert)\\b'
        'name': 'keyword.other.assert.d'
      }
    ]
